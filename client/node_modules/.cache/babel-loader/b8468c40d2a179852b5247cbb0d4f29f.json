{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  users: []\n};\nconst userSlice = createSlice({\n  name: 'users-slice',\n  initialState,\n  reducers: {\n    addAllUsers(state, action) {\n      return { ...state,\n        users: action.payload\n      };\n    },\n\n    addNewUser(state, action) {\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n    },\n\n    removeUserOffline(state, action) {\n      return { ...state,\n        users: action.payload\n      };\n    }\n\n  }\n});\nexport const {\n  addAllUsers,\n  addNewUser,\n  removeUserOffline\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/lolo/Escritorio/chatxx/client/src/pages/redux/usersSlice.js"],"names":["createSlice","initialState","users","userSlice","name","reducers","addAllUsers","state","action","payload","addNewUser","removeUserOffline","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAGA,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC1BI,EAAAA,IAAI,EAAE,aADoB;AAE1BH,EAAAA,YAF0B;AAG1BI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvB,aAAO,EACH,GAAGD,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACC;AAFX,OAAP;AAIH,KANK;;AAONC,IAAAA,UAAU,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACtB,aAAO,EACH,GAAGD,KADA;AAEHL,QAAAA,KAAK,EAAE,CACH,GAAGK,KAAK,CAACL,KADN,EAEHM,MAAM,CAACC,OAFJ;AAFJ,OAAP;AAOH,KAfK;;AAgBNE,IAAAA,iBAAiB,CAACJ,KAAD,EAAOC,MAAP,EAAc;AAC3B,aAAO,EACH,GAAGD,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACC;AAFX,OAAP;AAIH;;AArBK;AAHgB,CAAD,CAA7B;AA6BA,OAAO,MAAM;AAAEH,EAAAA,WAAF;AAAeI,EAAAA,UAAf;AAA2BC,EAAAA;AAA3B,IAAiDR,SAAS,CAACS,OAAjE;AACP,eAAeT,SAAS,CAACU,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    users: []\n}\nconst userSlice = createSlice({\n    name: 'users-slice',\n    initialState,\n    reducers: {\n        addAllUsers(state, action) {\n            return {\n                ...state,\n                users: action.payload\n            }\n        },\n        addNewUser(state, action) {\n            return {\n                ...state,\n                users: [\n                    ...state.users,\n                    action.payload\n                ]\n            }\n        },\n        removeUserOffline(state,action){\n            return {\n                ...state,\n                users: action.payload\n            }\n        }\n    }\n})\n\n\nexport const { addAllUsers, addNewUser, removeUserOffline } = userSlice.actions\nexport default userSlice.reducer"]},"metadata":{},"sourceType":"module"}