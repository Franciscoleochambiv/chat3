{"ast":null,"code":"var _jsxFileName = \"/home/lolo/Escritorio/chatxx/client/src/pages/ChatPage.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { makeStyles, Card, CardHeader, CardContent, CircularProgress, CardActions, TextField, Button, Typography, Box, IconButton } from \"@material-ui/core\";\nimport { useHistory, useParams } from \"react-router\";\nimport { getConversationById, handleSendMessage } from \"../utils/utils\";\nimport MessageComponent from \"../components/message\";\nimport { socket } from \"../App\";\nimport useAudio from \"../utils/useAudio\"; // import openSocket from 'socket.io-client'\n\nimport sound from \"../utils/sound.mp3\";\nimport { useDispatch, useSelector } from 'react-redux';\nconst useStyles = makeStyles(() => ({\n  title: {\n    padding: \"15px\",\n    fontWeight: \"600\",\n    backgroundColor: \"#45A1FF\",\n    color: \"white\",\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    alignItems: \"center\"\n  },\n  text: {\n    flex: \"1\"\n  },\n  back: {\n    fontSize: \"14px\"\n  },\n  card: {\n    display: \"flex\",\n    height: \"88vh\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\",\n    justifyItems: \"space-between\",\n    alignItems: \"space-between\",\n    textAlign: \"center\"\n  },\n  form: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  cardActions: {},\n  name: {\n    boxShadow: \"0px 10px 20px #b0bec5\",\n    padding: \"20px\"\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"auto\"\n  },\n  progress: {\n    textAlign: \"cneter\",\n    margin: \"20px\",\n    alignSelf: \"center\"\n  }\n}));\nexport default function ChatPage() {\n  const classes = useStyles();\n  const {\n    id\n  } = useParams(); // conversation id form URL\n\n  const [messages, setMessages] = useState(null);\n  const [conversationInfo, setConversationInfo] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const userId = localStorage.getItem(\"userId\");\n  const [userInfo, setUserInfo] = useState(\"\");\n  const audio = useAudio(sound);\n  const history = useHistory();\n  const scrollRef = useRef(null);\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.users);\n  useEffect(() => {\n    getConversationById(id).then(conversation => {\n      setConversationInfo(conversation);\n      setMessages(conversation.messages);\n      console.log(setMessages);\n      setUserInfo(userId == conversation.users.user1._id ? conversation.users.user2 : conversation.users.user1);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"new-msg\", data => {\n      setMessages(prev => [...prev, data]);\n      if (data.sent_by._id != userId) audio.play();\n    });\n  }, [socket]);\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.addEventListener(\"DOMNodeInserted\", e => {\n        const {\n          currentTarget: target\n        } = e;\n        target.scroll({\n          top: target.scrollHeight,\n          behavior: \"smooth\"\n        });\n      });\n    }\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Chat en linea\"), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => history.push(\"/\"),\n    className: classes.back,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"back\")), /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, !conversationInfo && !userInfo ? /*#__PURE__*/React.createElement(CircularProgress, {\n    disableShrink: true,\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.name,\n    title: userInfo.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardContent,\n    ref: scrollRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, !messages ? /*#__PURE__*/React.createElement(CircularProgress, {\n    disableShrink: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }) : messages.map(msg => /*#__PURE__*/React.createElement(MessageComponent, {\n    key: msg._id,\n    message: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: e => {\n      e.preventDefault();\n      handleSendMessage(inputValue, conversationInfo._id, setInputValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"filled\",\n    value: inputValue,\n    onChange: e => setInputValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !inputValue ? true : false,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, \"send\"))))));\n}","map":{"version":3,"sources":["/home/lolo/Escritorio/chatxx/client/src/pages/ChatPage.jsx"],"names":["React","useEffect","useRef","useState","makeStyles","Card","CardHeader","CardContent","CircularProgress","CardActions","TextField","Button","Typography","Box","IconButton","useHistory","useParams","getConversationById","handleSendMessage","MessageComponent","socket","useAudio","sound","useDispatch","useSelector","useStyles","title","padding","fontWeight","backgroundColor","color","textAlign","display","flexDirection","alignItems","text","flex","back","fontSize","card","height","justifyContent","alignContent","justifyItems","form","width","cardActions","name","boxShadow","cardContent","overflow","progress","margin","alignSelf","ChatPage","classes","id","messages","setMessages","conversationInfo","setConversationInfo","inputValue","setInputValue","userId","localStorage","getItem","userInfo","setUserInfo","audio","history","scrollRef","dispatch","state","users","then","conversation","console","log","user1","_id","user2","on","data","prev","sent_by","play","current","addEventListener","e","currentTarget","target","scroll","top","scrollHeight","behavior","push","map","msg","preventDefault","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  makeStyles,\n  Card,\n  CardHeader,\n  CardContent,\n  CircularProgress,\n  CardActions,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  IconButton,\n} from \"@material-ui/core\";\nimport { useHistory, useParams } from \"react-router\";\nimport { getConversationById, handleSendMessage } from \"../utils/utils\";\nimport MessageComponent from \"../components/message\";\nimport { socket } from \"../App\";\nimport useAudio from \"../utils/useAudio\";\n// import openSocket from 'socket.io-client'\nimport sound from \"../utils/sound.mp3\";\nimport {useDispatch,useSelector} from 'react-redux'\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    padding: \"15px\",\n    fontWeight: \"600\",\n    backgroundColor: \"#45A1FF\",\n    color: \"white\",\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    alignItems: \"center\",\n  },\n  text: {\n    flex: \"1\",\n  },\n  back: {\n    fontSize: \"14px\",\n  },\n  card: {\n    display: \"flex\",\n    height: \"88vh\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\",\n    justifyItems: \"space-between\",\n    alignItems: \"space-between\",\n    textAlign: \"center\",\n  },\n  form: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  cardActions: {},\n  name: {\n    boxShadow: \"0px 10px 20px #b0bec5\",\n    padding: \"20px\",\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"auto\",\n  },\n  progress: {\n    textAlign: \"cneter\",\n    margin: \"20px\",\n    alignSelf: \"center\",\n  },\n}));\n\nexport default function ChatPage() {\n  const classes = useStyles();\n  const { id } = useParams(); // conversation id form URL\n  const [messages, setMessages] = useState(null);\n  const [conversationInfo, setConversationInfo] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const userId = localStorage.getItem(\"userId\");\n  const [userInfo, setUserInfo] = useState(\"\");\n  const audio = useAudio(sound);\n  const history = useHistory();\n  const scrollRef = useRef(null);\n  const dispatch = useDispatch()\n  const state = useSelector(state => state.users)\n\n  useEffect(() => {\n    getConversationById(id).then((conversation) => {\n      setConversationInfo(conversation);\n      setMessages(conversation.messages);\n      console.log(setMessages)\n      setUserInfo(\n        userId == conversation.users.user1._id\n          ? conversation.users.user2\n          : conversation.users.user1\n      );\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"new-msg\", (data) => {\n      setMessages((prev) => [...prev, data]);\n      if (data.sent_by._id != userId) audio.play();\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.addEventListener(\"DOMNodeInserted\", (e) => {\n        const { currentTarget: target } = e;\n        target.scroll({ top: target.scrollHeight, behavior: \"smooth\" });\n      });\n    }\n  }, [messages]);\n\n  return (\n    <>\n      <Box className={classes.title}>\n        <Typography variant=\"h4\" className={classes.text}>\n          Chat en linea\n        </Typography>\n        <IconButton onClick={() => history.push(\"/\")} className={classes.back}>\n          back\n        </IconButton>\n      </Box>\n      <Card className={classes.card}>\n        {!conversationInfo && !userInfo ? (\n          <CircularProgress disableShrink className={classes.progress} />\n        ) : (\n          <>\n            <CardHeader className={classes.name} title={userInfo.name} />\n            <div className={classes.cardContent} ref={scrollRef}>\n              {!messages ? (\n                <CircularProgress disableShrink />\n              ) : (\n                messages.map((msg) => (\n                  <MessageComponent key={msg._id} message={msg} />\n                ))\n              )}\n            </div>\n            <CardActions className={classes.cardActions}>\n              <form\n                className={classes.form}\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  handleSendMessage(inputValue, conversationInfo._id, setInputValue);\n                }}\n              >\n                <TextField\n                  fullWidth\n                  variant=\"filled\"\n                  value={inputValue}\n                  onChange={(e) => setInputValue(e.target.value)}\n                />\n                <Button disabled={!inputValue ? true : false} type=\"submit\">\n                  send\n                </Button>\n              </form>\n            </CardActions>\n          </>\n        )}\n      </Card>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}