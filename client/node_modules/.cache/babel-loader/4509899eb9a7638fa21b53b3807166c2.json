{"ast":null,"code":"var _jsxFileName = \"/home/lolo/Escritorio/chatxx/client/src/App.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport MainPage from \"./pages\";\nimport AuthPage from \"./auth\";\nimport ChatPage from \"./pages/ChatPage\";\nimport openSocket from \"socket.io-client\";\nimport { addNewUser, removeUserOffline } from \"./pages/redux/usersSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport const socket = openSocket(\"http://localhost:4000/\");\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.baseURL = \"http://localhost:4000/\";\n  if (token) config.headers.authorization = `Bearer ${token}`;\n  return config;\n});\n\nfunction App() {\n  const isAuthUser = localStorage.getItem(\"token\");\n  const userId = localStorage.getItem(\"userId\");\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.users);\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", e => {\n      socket.emit(\"on-user-disconnect\", userId);\n    });\n  }, []);\n  useEffect(() => {\n    socket.emit(\"on-user-connect\", userId);\n    socket.on(\"on-user-connect\", user => {\n      dispatch(addNewUser(user));\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"on-user-disconnect\", userId => {\n      console.log(state.users);\n      const users = state.users.filter(user => user._id.toString() == userId);\n      dispatch(removeUserOffline(users));\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, !isAuthUser ? /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: AuthPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: MainPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/chat/:id\",\n    component: ChatPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lolo/Escritorio/chatxx/client/src/App.jsx"],"names":["React","useEffect","Container","Route","Switch","ToastContainer","axios","MainPage","AuthPage","ChatPage","openSocket","addNewUser","removeUserOffline","useDispatch","useSelector","socket","interceptors","request","use","config","token","localStorage","getItem","baseURL","headers","authorization","App","isAuthUser","userId","dispatch","state","users","window","addEventListener","e","emit","on","user","console","log","filter","_id","toString"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport {  Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\n\nimport MainPage from \"./pages\";\nimport AuthPage from \"./auth\";\nimport ChatPage from \"./pages/ChatPage\";\nimport openSocket from \"socket.io-client\";\nimport { addNewUser, removeUserOffline } from \"./pages/redux/usersSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const socket = openSocket(\"http://localhost:4000/\");\n\naxios.interceptors.request.use((config) => {\n  const token = localStorage.getItem(\"token\");\n  config.baseURL = \"http://localhost:4000/\";\n  if (token) config.headers.authorization = `Bearer ${token}`;\n  return config;\n});\n\n\nfunction App() {\n  const isAuthUser = localStorage.getItem(\"token\");\n  const userId = localStorage.getItem(\"userId\");\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.users);\n\n\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", (e) => {\n      socket.emit(\"on-user-disconnect\", userId);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.emit(\"on-user-connect\", userId);\n    socket.on(\"on-user-connect\", (user) => {\n      dispatch(addNewUser(user))\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"on-user-disconnect\", (userId) => {\n      console.log(state.users)\n      const users = state.users.filter((user) => user._id.toString() == userId)\n      dispatch(removeUserOffline(users))\n    });\n  }, []);\n\n  return (\n    <Container>\n      <ToastContainer />\n      <Switch>\n        {!isAuthUser ? (\n          <Route path=\"/\" component={AuthPage} />\n        ) : (\n          <>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route exact path=\"/chat/:id\" component={ChatPage} />\n            {/* <Redirect from=\"/:anyThingElse\" to=\"/\" /> */}\n          </>\n        )}\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}