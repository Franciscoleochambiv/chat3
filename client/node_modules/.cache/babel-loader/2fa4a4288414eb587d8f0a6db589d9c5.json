{"ast":null,"code":"var _jsxFileName = \"/home/lolo/Escritorio/chatxx/client/src/pages/index.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, CircularProgress, Divider, List, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport ConversationUsers from \"../components/ConversationUser\";\nimport { getMyInfoAsUser, getAllConversations, getAllUsers } from \"../utils/utils\";\nimport ActiveUsers from \"../components/Activeusers\";\nimport { socket } from \"../App\";\nimport { toast } from \"react-toastify\";\nimport useAudio from \"../utils/useAudio\";\nimport sound from \"../utils/sound.mp3\";\nimport { addAllUsers } from \"./redux/usersSlice\";\nconst useStyle = makeStyles(() => ({\n  paper: {\n    height: \"100vh\",\n    display: \"flex\",\n    textAlign: \"center\"\n  },\n  left: {\n    flex: \"1\",\n    margin: \"10px\"\n  },\n  right: {\n    flex: \".3\",\n    margin: \"10px\"\n  },\n  title: {\n    padding: \"15px\",\n    fontWeight: \"600\",\n    backgroundColor: \"#45A1FF\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  progress: {\n    marginTop: \"10px\",\n    textAlign: \"center\"\n  },\n  messageDontHave: {\n    margin: \"20px\",\n    fontWeight: \"700\"\n  },\n  yourName: {\n    height: \"30px\",\n    padding: \"30px\"\n  }\n}));\nexport default function MainPage() {\n  const classes = useStyle();\n  const [conversations, setConversations] = useState(null); // const [users, setUsers] = useState(null);\n\n  const [myInfo, setMyInfo] = useState(null);\n  const audio = useAudio(sound);\n  const userId = localStorage.getItem(\"userId\");\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.users);\n  useEffect(() => {\n    socket.on(\"new-msg\", data => {\n      if (data.sent_by._id != userId) {\n        toast.info(\"new message from : \");\n        audio.play();\n      }\n    });\n  }, [socket]);\n  useEffect(() => {\n    getAllUsers().then(_ref => {\n      let {\n        users\n      } = _ref;\n\n      if (users.length) {\n        dispatch(addAllUsers(users));\n      }\n    });\n    getAllConversations().then(_ref2 => {\n      let {\n        conversation\n      } = _ref2;\n      setConversations(conversation);\n    });\n    getMyInfoAsUser().then(user => {\n      setMyInfo(user);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('new-conversation', conversation => {\n      setConversations(prev => [conversation, ...prev]);\n      alert(4);\n    });\n  }, [socket]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Chat Municipalidad Distrital de Chamca\"), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.left,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, !conversations ? /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.progress,\n    disableShrink: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }) : !conversations.length ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.messageDontHave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"You don't have conversations !\") : conversations.map(conv => /*#__PURE__*/React.createElement(ConversationUsers, {\n    key: conv._id,\n    conversation: conv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Card, {\n    className: classes.right,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.yourName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, myInfo && myInfo.name), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.messageDontHave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Active Users\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, !state.users ? /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.progress,\n    disableShrink: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }) : state.users.map(user => /*#__PURE__*/React.createElement(ActiveUsers, {\n    key: user._id,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/lolo/Escritorio/chatxx/client/src/pages/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Card","CircularProgress","Divider","List","makeStyles","Paper","Typography","ConversationUsers","getMyInfoAsUser","getAllConversations","getAllUsers","ActiveUsers","socket","toast","useAudio","sound","addAllUsers","useStyle","paper","height","display","textAlign","left","flex","margin","right","title","padding","fontWeight","backgroundColor","color","progress","marginTop","messageDontHave","yourName","MainPage","classes","conversations","setConversations","myInfo","setMyInfo","audio","userId","localStorage","getItem","dispatch","state","users","on","data","sent_by","_id","info","play","then","length","conversation","user","prev","alert","map","conv","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Card,\n  CircularProgress,\n  Divider,\n  List,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport ConversationUsers from \"../components/ConversationUser\";\nimport {\n  getMyInfoAsUser,\n  getAllConversations,\n  getAllUsers,\n} from \"../utils/utils\";\nimport ActiveUsers from \"../components/Activeusers\";\nimport { socket } from \"../App\";\nimport { toast } from \"react-toastify\";\nimport useAudio from \"../utils/useAudio\";\nimport sound from \"../utils/sound.mp3\";\nimport { addAllUsers } from \"./redux/usersSlice\";\n\nconst useStyle = makeStyles(() => ({\n  paper: {\n    height: \"100vh\",\n    display: \"flex\",\n    textAlign: \"center\",\n  },\n  left: {\n    flex: \"1\",\n    margin: \"10px\",\n  },\n  right: {\n    flex: \".3\",\n    margin: \"10px\",\n  },\n  title: {\n    padding: \"15px\",\n    fontWeight: \"600\",\n    backgroundColor: \"#45A1FF\",\n    color: \"white\",\n    textAlign: \"center\",\n  },\n  progress: {\n    marginTop: \"10px\",\n    textAlign: \"center\",\n  },\n  messageDontHave: {\n    margin: \"20px\",\n    fontWeight: \"700\",\n  },\n  yourName: {\n    height: \"30px\",\n    padding: \"30px\",\n  },\n}));\n\nexport default function MainPage() {\n  const classes = useStyle()\n  const [conversations, setConversations] = useState(null);\n  // const [users, setUsers] = useState(null);\n  const [myInfo, setMyInfo] = useState(null);\n  const audio = useAudio(sound);\n  const userId = localStorage.getItem(\"userId\");\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.users);\n\n  useEffect(() => {\n    socket.on(\"new-msg\", (data) => {\n      if (data.sent_by._id != userId) {\n        toast.info(\"new message from : \");\n        audio.play();\n      }\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    getAllUsers().then(({ users }) => {\n      if(users.length){\n        dispatch(addAllUsers(users));\n      }\n    });\n\n    getAllConversations().then(({ conversation }) => {\n      setConversations(conversation);\n    });\n\n    getMyInfoAsUser().then((user) => {\n      setMyInfo(user);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on('new-conversation', conversation => {\n      setConversations(prev => [conversation, ...prev])\n      alert(4)\n    })\n  }, [socket])\n\n  return (\n    <>\n      <Typography className={classes.title} variant=\"h4\">\n        Chat Municipalidad Distrital de Chamca\n      </Typography>\n      <Paper className={classes.paper}>\n        <Card className={classes.left}>\n          <Divider />\n          <List>\n            {!conversations ? (\n              <CircularProgress className={classes.progress} disableShrink />\n            ) : !conversations.length ? (\n              <Typography variant=\"h5\" className={classes.messageDontHave}>\n                You don't have conversations !\n              </Typography>\n            ) : (\n              conversations.map((conv) => (\n                <ConversationUsers key={conv._id} conversation={conv} />\n              ))\n            )}\n          </List>\n        </Card>\n        <Card className={classes.right}>\n          <Typography variant=\"h5\" className={classes.yourName}>\n            {myInfo && myInfo.name}\n          </Typography>\n          <Divider />\n          <Typography variant=\"h5\" className={classes.messageDontHave}>\n            Active Users\n          </Typography>\n          <List>\n            {!state.users ? (\n              <CircularProgress className={classes.progress} disableShrink />\n            ) : (\n              state.users.map((user) => (\n                <ActiveUsers key={user._id} user={user} />\n              ))\n            )}\n          </List>\n        </Card>\n      </Paper>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}