{"ast":null,"code":"var _jsxFileName = \"/home/lolo/Escritorio/chatxx/client/src/components/ConversationUser.jsx\";\nimport React from \"react\";\nimport { Avatar, Divider, ListItem, ListItemAvatar, ListItemText, makeStyles, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nconst useStyles = makeStyles(() => ({\n  user: {\n    padding: \"15px\"\n  },\n  name: {\n    fontSize: \"50px\"\n  }\n}));\n\nfunction ConversationUsers(_ref) {\n  let {\n    conversation\n  } = _ref;\n  const classes = useStyles();\n  const history = useHistory();\n  const userId = localStorage.getItem(\"userId\");\n  const userInfo = userId == conversation.users.user1._id ? conversation.users.user2 : conversation.users.user1;\n  const time = moment(conversation.updatedAt).format(\"hh:mm a\");\n  if (!userInfo) return;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.user,\n    button: true,\n    onClick: () => history.push(`/chat/${conversation._id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, userInfo.name.split(\"\")[0])), /*#__PURE__*/React.createElement(ListItemText, {\n    className: classes.name,\n    primary: userInfo.name,\n    secondary: conversation.lastMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, time)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ConversationUsers;","map":{"version":3,"sources":["/home/lolo/Escritorio/chatxx/client/src/components/ConversationUser.jsx"],"names":["React","Avatar","Divider","ListItem","ListItemAvatar","ListItemText","makeStyles","Typography","useHistory","moment","useStyles","user","padding","name","fontSize","ConversationUsers","conversation","classes","history","userId","localStorage","getItem","userInfo","users","user1","_id","user2","time","updatedAt","format","push","split","lastMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,QAHF,EAIEC,cAJF,EAKEC,YALF,EAMEC,UANF,EAOEC,UAPF,QAQO,mBARP;AASA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC,OAAO;AAClCK,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GAD4B;AAIlCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAJ4B,CAAP,CAAD,CAA5B;;AASA,SAASC,iBAAT,OAA6C;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AAC3C,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,QAAMC,QAAQ,GACZH,MAAM,IAAIH,YAAY,CAACO,KAAb,CAAmBC,KAAnB,CAAyBC,GAAnC,GACIT,YAAY,CAACO,KAAb,CAAmBG,KADvB,GAEIV,YAAY,CAACO,KAAb,CAAmBC,KAHzB;AAIA,QAAMG,IAAI,GAAGlB,MAAM,CAACO,YAAY,CAACY,SAAd,CAAN,CAA+BC,MAA/B,CAAsC,SAAtC,CAAb;AACA,MAAG,CAACP,QAAJ,EAAc;AACd,sBACE,uDACE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAEL,OAAO,CAACN,IADrB;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,OAAO,EAAE,MAAMO,OAAO,CAACY,IAAR,CAAc,SAAQd,YAAY,CAACS,GAAI,EAAvC,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,QAAQ,CAACT,IAAT,CAAckB,KAAd,CAAoB,EAApB,EAAwB,CAAxB,CAAT,CADF,CALF,eAQE,oBAAC,YAAD;AACE,IAAA,SAAS,EAAEd,OAAO,CAACJ,IADrB;AAEE,IAAA,OAAO,EAAES,QAAQ,CAACT,IAFpB;AAGE,IAAA,SAAS,EAAEG,YAAY,CAACgB,WAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAaE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,IAA7B,CAbF,CADF,eAgBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAoBD;;AAED,eAAeZ,iBAAf","sourcesContent":["import React from \"react\";\nimport {\n  Avatar,\n  Divider,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(() => ({\n  user: {\n    padding: \"15px\",\n  },\n  name: {\n    fontSize: \"50px\",\n  },\n}));\n\nfunction ConversationUsers({ conversation }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const userId = localStorage.getItem(\"userId\");\n  const userInfo =\n    userId == conversation.users.user1._id\n      ? conversation.users.user2\n      : conversation.users.user1;\n  const time = moment(conversation.updatedAt).format(\"hh:mm a\");\n  if(!userInfo) return\n  return (\n    <>\n      <ListItem\n        className={classes.user}\n        button\n        onClick={() => history.push(`/chat/${conversation._id}`)}\n      >\n        <ListItemAvatar>\n          <Avatar>{userInfo.name.split(\"\")[0]}</Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          className={classes.name}\n          primary={userInfo.name}\n          secondary={conversation.lastMessage}\n        />\n        <Typography variant=\"body2\">{time}</Typography>\n      </ListItem>\n      <Divider />\n    </>\n  );\n}\n\nexport default ConversationUsers;\n"]},"metadata":{},"sourceType":"module"}